{"version":3,"sources":["/Users/haoyuezhang/Documents/dev/dui/src/components/Slider/README.md","/Users/haoyuezhang/Documents/dev/dui/sites/dui/pages/Slider.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","__position","__code","__scope","this","Slider","Button","Playground","Props","Component","useState","useCallback","onChange","value","console","log","onChangeEnd","defaultValue","type","style","marginLeft","min","max","setValue","handleAdd","Math","handleMinus","onClick","step","width","dragStyle","borderColor","fillStyle","background"],"mappings":"skBAYMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,UADR,UAGA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iDAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mEAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0DAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oMAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iNAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8KAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,a,qLAUVJ,EAAWK,gBAAiB,EC5N5B,IAKMN,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,6BADR,6BAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,wJAA6JC,QAAS,CACvMN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,WACAC,WACAC,eACAC,QACAC,sBACAC,oBACAC,2BACCb,QAAQ,cACX,YAAC,IAAD,CAAQc,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,WAAaF,IAAQG,YAAa,SAAAH,GAAK,OAAIC,QAAQC,IAAI,eAAiBF,IAAQI,aAAc,GAAInB,QAAQ,YAEjJ,iBAAQ,CACN,GAAM,4BADR,4BAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,oZAA+ZC,QAAS,CACzcN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,WACAC,WACAC,eACAC,QACAC,sBACAC,oBACAC,2BACCb,QAAQ,cACX,YAAC,IAAD,CAAQc,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,WAAaF,IAAQG,YAAa,SAAAH,GAAK,OAAIC,QAAQC,IAAI,eAAiBF,IAAQI,aAAc,GAAIC,KAAK,WAAWpB,QAAQ,WACjK,YAAC,IAAD,CAAQqB,MAAO,CACXC,WAAY,QACXH,aAAc,EAAGI,KAAM,IAAKC,IAAK,IAAKV,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,WAAaF,IAAQG,YAAa,SAAAH,GAAK,OAAIC,QAAQC,IAAI,eAAiBF,IAAQK,KAAK,UAAUpB,QAAQ,YAEjL,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,upBAA2oBC,QAAS,CACrrBN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,WACAC,WACAC,eACAC,QACAC,sBACAC,oBACAC,2BACCb,QAAQ,eACR,WAAO,IAAD,EACqBY,mBAAS,GAD9B,mBACEG,EADF,KACSU,EADT,KAKCC,EAAYb,uBAAY,WAC5BY,EAASE,KAAKJ,IAFJ,IAEaR,EAJZ,OAKV,CAACA,IACEa,EAAcf,uBAAY,WAC9BY,EAASE,KAAKH,IANJ,EAMaT,EAPZ,OAQV,CAACA,IACJ,OAAO,uBACH,4CAASA,GACT,YAAC,IAAD,CAAQc,QAASD,EAAa5B,QAAQ,UAAtC,KACA,YAAC,IAAD,CAAQe,MAAOA,EAAOQ,IAXd,EAWwBC,IAVxB,IAUkCM,KAZjC,GAY6ChB,SAAUW,EAAUJ,MAAO,CACjFU,MAAO,SACN/B,QAAQ,WACT,YAAC,IAAD,CAAQ6B,QAASH,EAAW1B,QAAQ,UAApC,SAIR,iBAAQ,CACN,GAAM,kCADR,kCAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,6IAAoJC,QAAS,CAC9LN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,WACAC,WACAC,eACAC,QACAC,sBACAC,oBACAC,2BACCb,QAAQ,cACX,YAAC,IAAD,CAAQqB,MAAO,CACXU,MAAO,SACNC,UAAW,CACZC,YAAa,OACZC,UAAW,CACZC,WAAY,QACXhB,aAAc,GAAInB,QAAQ,YAE/B,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,EAAD,CAAOA,QAAQ,W,gLAKnBH,EAAWK,gBAAiB","file":"static/js/sites-dui-pages-slider.b960cfb7.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"slider\"\n    }}>{`Slider`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`dragStyle (dragClassName)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`滑块的样式 (类名)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object (string)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fillStyle (fillClassName)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`滑过的部分的样式 (类名)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object (string)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最小值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`max`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最大值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`100`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`初始值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min的值`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`强制设置当前值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`滑块值改变时的回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value: number) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangeEnd`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`用户一轮改变滑块值结束时的回调，在点击后或者拖动时松开鼠标后触发`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value: number) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`step`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`选值步长，大于或等于0，应满足(max - min)能被其整除，设为0时表示不设置步长限制`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`nunber`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress 样式类似于进度条，fill部分有颜色； balance 有中点，fill部分无颜色`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'progress' `}{`|`}{` 'balance'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'progress'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否禁用`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Slider, Button } from '../../../src'\nimport { Playground } from 'docz'\nimport Props from '../../../src/components/Slider/README.md'\nimport { Component, useState, useCallback } from 'react'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"slider-滑动条\"\n    }}>{`Slider 滑动条`}</h1>\n    <h2 {...{\n      \"id\": \"基本\"\n    }}>{`基本`}</h2>\n    <Playground __position={0} __code={'<Slider\\n  onChange={value => console.log(\\'value1: \\' + value)}\\n  onChangeEnd={value => console.log(\\'changeEnd1: \\' + value)}\\n  defaultValue={50}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Slider,\n      Button,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n    <Slider onChange={value => console.log('value1: ' + value)} onChangeEnd={value => console.log('changeEnd1: ' + value)} defaultValue={50} mdxType=\"Slider\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"两种样式\"\n    }}>{`两种样式`}</h2>\n    <Playground __position={1} __code={'<Slider\\n  onChange={value => console.log(\\'value1: \\' + value)}\\n  onChangeEnd={value => console.log(\\'changeEnd1: \\' + value)}\\n  defaultValue={50}\\n  type=\\\"progress\\\"\\n/>\\n<Slider\\n  style={{ marginLeft: \\'50px\\' }}\\n  defaultValue={0}\\n  min={-100}\\n  max={100}\\n  onChange={value => console.log(\\'value2: \\' + value)}\\n  onChangeEnd={value => console.log(\\'changeEnd2: \\' + value)}\\n  type=\\\"balance\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Slider,\n      Button,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n    <Slider onChange={value => console.log('value1: ' + value)} onChangeEnd={value => console.log('changeEnd1: ' + value)} defaultValue={50} type=\"progress\" mdxType=\"Slider\" />\n    <Slider style={{\n        marginLeft: '50px'\n      }} defaultValue={0} min={-100} max={100} onChange={value => console.log('value2: ' + value)} onChangeEnd={value => console.log('changeEnd2: ' + value)} type=\"balance\" mdxType=\"Slider\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"受控\"\n    }}>{`受控`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [value, setValue] = useState(0)\\n  const step = 20\\n  const min = 0\\n  const max = 200\\n\\n  const handleAdd = useCallback(() => {\\n    setValue(Math.min(max, value + step))\\n  }, [value])\\n\\n  const handleMinus = useCallback(() => {\\n    setValue(Math.max(min, value - step))\\n  }, [value])\\n\\n  return (\\n    <div>\\n      <p>当前值: {value}</p>\\n      <Button onClick={handleMinus}>-</Button>\\n      <Slider\\n        value={value}\\n        min={min}\\n        max={max}\\n        step={step}\\n        onChange={setValue}\\n        style={{ width: \\'300px\\' }}\\n      />\\n      <Button onClick={handleAdd}>+</Button>\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Slider,\n      Button,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n      {() => {\n        const [value, setValue] = useState(0);\n        const step = 20;\n        const min = 0;\n        const max = 200;\n        const handleAdd = useCallback(() => {\n          setValue(Math.min(max, value + step));\n        }, [value]);\n        const handleMinus = useCallback(() => {\n          setValue(Math.max(min, value - step));\n        }, [value]);\n        return <div>\n            <p>当前值: {value}</p>\n            <Button onClick={handleMinus} mdxType=\"Button\">-</Button>\n            <Slider value={value} min={min} max={max} step={step} onChange={setValue} style={{\n            width: '300px'\n          }} mdxType=\"Slider\" />\n            <Button onClick={handleAdd} mdxType=\"Button\">+</Button>\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义样式\"\n    }}>{`自定义样式`}</h2>\n    <Playground __position={3} __code={'<Slider\\n  style={{ width: \\'300px\\' }}\\n  dragStyle={{ borderColor: \\'red\\' }}\\n  fillStyle={{ background: \\'pink\\' }}\\n  defaultValue={50}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Slider,\n      Button,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n    <Slider style={{\n        width: '300px'\n      }} dragStyle={{\n        borderColor: 'red'\n      }} fillStyle={{\n        background: 'pink'\n      }} defaultValue={50} mdxType=\"Slider\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"参数\"\n    }}>{`参数`}</h2>\n    <Props mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}