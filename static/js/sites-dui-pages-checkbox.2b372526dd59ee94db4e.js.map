{"version":3,"sources":["/Users/haoyuezhang/Documents/dev/dui/src/components/Checkbox/README.md","/Users/haoyuezhang/Documents/dev/dui/sites/dui/pages/Checkbox.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","name","__position","__code","__scope","this","Checkbox","Playground","Props","Component","useState","useCallback","onChange","value","console","log","defaultChecked","disabled","checked","shape","style","marginTop","hollow","setChecked","handleChange","e","Group","values","options","label","Demo","args","state","bind","setState","fontWeight","color","toggle","prev","labelClickable","onClick","cursor","href","target","textDecoration","stopPropagation"],"mappings":"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","file":"static/js/sites-dui-pages-checkbox.721f8e4d.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`checked`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`指定当前是否选中`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultChecked`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`非受控时，初始是否选中`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`单选框的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否禁用`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`单选框状态变化时的回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(checked: boolean, e: any) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`hollow`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`选中态是否为镂空样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelClickable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`点击标签文字是否触发单选框状态变化`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`shape`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`单选框的形状`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'square' `}{`|`}{` 'circle'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'square'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`iconStyle (iconClassName)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`图标的样式 (类名)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object (string)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelStyle (labelClassName)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`文字的样式 (类名)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object (string)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Checkbox 的其他属性和 React 自带的 input`}{`[type=\"checkbox\"]`}{` 一致。`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"单选框的值-value\"\n    }}>{`单选框的值 value`}</h4>\n    <p>{`value 属性主要用于记录单选框选中态下的值，一般与 Checkbox.Group 配合使用`}</p>\n    <p>{`传入 Checkbox 的 value 值可通过 onChange 回调函数的 value 获取`}</p>\n    <h3 {...{\n      \"id\": \"checkboxgroup\"\n    }}>{`Checkbox.Group`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Checkbox 组件一般结合 Checkbox.Group 组件一起使用。此时checkbox的checked状态完全由group接管，手动为其设置checked无效`}</p>\n    </blockquote>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`以配置形式设置子元素`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string[] `}{`|`}{` object[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValues`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`非受控时，初始选中的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`any[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`values`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`当前选中的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`any[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`禁选所有Checkbox`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`选项变化时的回调函数`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(values: any[], e: any) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`itemStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`应用于group内每个checkbox的样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"checkboxgroup-使用\"\n    }}>{`Checkbox.Group 使用`}</h4>\n    <p>{`常用的调用方式有如下三种`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Checkbox 和 Group 组件组合使用`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Checkbox.Group onChange={this.onChange} value={this.state.value} label=\"单选按钮组\">\n    <Checkbox value={1}>A</Checkbox>\n    <Checkbox value={2}>B</Checkbox>\n    <Checkbox value={3}>C</Checkbox>\n    <Checkbox value={4}>D</Checkbox>\n</Checkbox.Group>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`options 参数配置`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Checkbox.Group\n    onChange={this.onChange}\n    value={this.state.value}\n    label=\"单选按钮组\"\n    options={[\n        {\n            label: 'A',\n            value: 1\n        },\n        {\n            label: 'B',\n            value: 2\n        },\n        {\n            label: 'C',\n            value: 3\n        },\n        {\n            label: 'D',\n            value: 4\n        }\n    ]}\n/>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`简化版 options 参数配置`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Checkbox.Group\n    onChange={this.onChange}\n    value={this.state.value}\n    label=\"单选按钮组\"\n    options={['A', 'B', 'C', 'D']}\n/>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"options-高级配置\"\n    }}>{`options 高级配置`}</h4>\n    <p>{`options 配置被设计为可以向 Checkbox 内传入任何可用的属性，为自定义逻辑提供灵活的入口，内部实现代码片段如下`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// option 即为传入其中的属性\n<Checkbox\n    {...option}\n    key={index}\n    value={option.value}\n    onChange={onChange}\n    checked={option.value === value}\n    disabled={option.disabled || disabled}\n    style={{ ...style, ...option.style }}\n>\n    {option.label}\n</Checkbox>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Checkbox } from '../../../src'\nimport { Playground } from 'docz'\nimport Props from '../../../src/components/Checkbox/README.md'\nimport { Component, useState, useCallback } from 'react'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Demo = makeShortcode(\"Demo\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"checkbox-多选框\"\n    }}>{`Checkbox 多选框`}</h1>\n    <h2 {...{\n      \"id\": \"基本\"\n    }}>{`基本`}</h2>\n    <Playground __position={0} __code={'<Checkbox onChange={value => console.log(value)} defaultChecked>\\n  复选框\\n</Checkbox>\\n<Checkbox onChange={value => console.log(value)} disabled>\\n  禁用的复选框\\n</Checkbox>\\n<Checkbox onChange={value => console.log(value)} disabled checked>\\n  禁用的已选中复选框\\n</Checkbox>\\n<Checkbox\\n  onChange={value => console.log(value)}\\n  defaultChecked\\n  shape=\\\"circle\\\"\\n  style={{ marginTop: \\'40px\\' }}\\n>\\n  圆形复选框\\n</Checkbox>\\n<Checkbox onChange={value => console.log(value)} shape=\\\"circle\\\" disabled>\\n  禁用的圆形复选框\\n</Checkbox>\\n<Checkbox\\n  onChange={value => console.log(value)}\\n  shape=\\\"circle\\\"\\n  disabled\\n  checked\\n>\\n  禁用的已选中圆形复选框\\n</Checkbox>'} __scope={{\n      props: this ? this.props : props,\n      Checkbox,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n    <Checkbox onChange={value => console.log(value)} defaultChecked mdxType=\"Checkbox\">复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} disabled mdxType=\"Checkbox\">禁用的复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} disabled checked mdxType=\"Checkbox\">禁用的已选中复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} defaultChecked shape=\"circle\" style={{\n        marginTop: '40px'\n      }} mdxType=\"Checkbox\">圆形复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} shape=\"circle\" disabled mdxType=\"Checkbox\">禁用的圆形复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} shape=\"circle\" disabled checked mdxType=\"Checkbox\">禁用的已选中圆形复选框</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"镂空\"\n    }}>{`镂空`}</h2>\n    <Playground __position={1} __code={'<Checkbox onChange={value => console.log(value)} hollow defaultChecked>\\n  镂空复选框\\n</Checkbox>\\n<Checkbox onChange={value => console.log(value)} hollow disabled>\\n  禁用的镂空复选框\\n</Checkbox>\\n<Checkbox onChange={value => console.log(value)} hollow checked disabled>\\n  禁用的已选中镂空复选框\\n</Checkbox>\\n<Checkbox\\n  onChange={value => console.log(value)}\\n  defaultChecked\\n  shape=\\\"circle\\\"\\n  style={{ marginTop: \\'40px\\' }}\\n  hollow\\n>\\n  圆形镂空复选框\\n</Checkbox>\\n<Checkbox\\n  onChange={value => console.log(value)}\\n  shape=\\\"circle\\\"\\n  hollow\\n  disabled\\n>\\n  禁用的圆形镂空复选框\\n</Checkbox>\\n<Checkbox\\n  onChange={value => console.log(value)}\\n  shape=\\\"circle\\\"\\n  hollow\\n  disabled\\n  checked\\n>\\n  禁用的已选中圆形镂空复选框\\n</Checkbox>'} __scope={{\n      props: this ? this.props : props,\n      Checkbox,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n    <Checkbox onChange={value => console.log(value)} hollow defaultChecked mdxType=\"Checkbox\">镂空复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} hollow disabled mdxType=\"Checkbox\">禁用的镂空复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} hollow checked disabled mdxType=\"Checkbox\">禁用的已选中镂空复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} defaultChecked shape=\"circle\" style={{\n        marginTop: '40px'\n      }} hollow mdxType=\"Checkbox\">圆形镂空复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} shape=\"circle\" hollow disabled mdxType=\"Checkbox\">禁用的圆形镂空复选框</Checkbox>\n    <Checkbox onChange={value => console.log(value)} shape=\"circle\" hollow disabled checked mdxType=\"Checkbox\">禁用的已选中圆形镂空复选框</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"受控\"\n    }}>{`受控`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [checked, setChecked] = useState(false)\\n  const handleChange = useCallback((value, e) => {\\n    console.log({ value, e })\\n    setChecked(value)\\n  }, [])\\n\\n  return (\\n    <Checkbox checked={checked} onChange={handleChange}>\\n      受控复选框\\n    </Checkbox>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Checkbox,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n      {() => {\n        const [checked, setChecked] = useState(false);\n        const handleChange = useCallback((value, e) => {\n          console.log({\n            value,\n            e\n          });\n          setChecked(value);\n        }, []);\n        return <Checkbox checked={checked} onChange={handleChange} mdxType=\"Checkbox\">\n            受控复选框\n        </Checkbox>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"group-非受控\"\n    }}>{`Group 非受控`}</h2>\n    <Playground __position={3} __code={'<Checkbox.Group\\n  onChange={(values, e) => console.log({ values, e })}\\n  options={[\\n    {\\n      label: \\'第一个选项\\',\\n      value: 1,\\n    },\\n    {\\n      label: \\'第二个选项\\',\\n      value: 2,\\n    },\\n    {\\n      label: \\'第三个选项\\',\\n      value: 3,\\n    },\\n    {\\n      label: \\'第四个选项\\',\\n      value: 4,\\n    },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Checkbox,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n    <Checkbox.Group onChange={(values, e) => console.log({\n        values,\n        e\n      })} options={[{\n        label: '第一个选项',\n        value: 1\n      }, {\n        label: '第二个选项',\n        value: 2\n      }, {\n        label: '第三个选项',\n        value: 3\n      }, {\n        label: '第四个选项',\n        value: 4\n      }]} />\n    </Playground>\n    <h2 {...{\n      \"id\": \"group-受控多行文本\"\n    }}>{`Group 受控多行文本`}</h2>\n    <Playground __position={4} __code={'() => {\\n  const Demo = class Demo extends Component {\\n    constructor(...args) {\\n      super(...args)\\n      this.state = { values: [1] }\\n      this.handleChange = this.handleChange.bind(this)\\n    }\\n\\n    handleChange(values, e) {\\n      console.log({ values, e })\\n      this.setState({ values })\\n    }\\n\\n    render() {\\n      return (\\n        <div>\\n          <Checkbox.Group\\n            onChange={this.handleChange}\\n            values={this.state.values}\\n          >\\n            <Checkbox value={1}>\\n              <div style={{ fontWeight: 500 }}>普通条目1</div>\\n              <div style={{ color: \\'#bbb\\' }}>一些描述语句</div>\\n            </Checkbox>\\n            <Checkbox value={2}>\\n              <div style={{ fontWeight: 500 }}>普通条目2</div>\\n              <div style={{ color: \\'#bbb\\' }}>一些描述语句</div>\\n            </Checkbox>\\n            <Checkbox value={3}>\\n              <div style={{ fontWeight: 500 }}>普通条目3</div>\\n              <div style={{ color: \\'#bbb\\' }}>一些描述语句</div>\\n            </Checkbox>\\n            <Checkbox value={4}>\\n              <div style={{ fontWeight: 500 }}>普通条目4</div>\\n              <div style={{ color: \\'#bbb\\' }}>一些描述语句</div>\\n            </Checkbox>\\n          </Checkbox.Group>\\n        </div>\\n      )\\n    }\\n  }\\n\\n  return <Demo />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Checkbox,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n      {() => {\n        const Demo = class Demo extends Component {\n          constructor(...args) {\n            super(...args);\n            this.state = {\n              values: [1]\n            };\n            this.handleChange = this.handleChange.bind(this);\n          }\n\n          handleChange(values, e) {\n            console.log({\n              values,\n              e\n            });\n            this.setState({\n              values\n            });\n          }\n\n          render() {\n            return <div>\n                    <Checkbox.Group onChange={this.handleChange} values={this.state.values}>\n                        <Checkbox value={1} mdxType=\"Checkbox\">\n                            <div style={{\n                    fontWeight: 500\n                  }}>普通条目1</div>\n                            <div style={{\n                    color: '#bbb'\n                  }}>一些描述语句</div>\n                        </Checkbox>\n                        <Checkbox value={2} mdxType=\"Checkbox\">\n                            <div style={{\n                    fontWeight: 500\n                  }}>普通条目2</div>\n                            <div style={{\n                    color: '#bbb'\n                  }}>一些描述语句</div>\n                        </Checkbox>\n                        <Checkbox value={3} mdxType=\"Checkbox\">\n                            <div style={{\n                    fontWeight: 500\n                  }}>普通条目3</div>\n                            <div style={{\n                    color: '#bbb'\n                  }}>一些描述语句</div>\n                        </Checkbox>\n                        <Checkbox value={4} mdxType=\"Checkbox\">\n                            <div style={{\n                    fontWeight: 500\n                  }}>普通条目4</div>\n                            <div style={{\n                    color: '#bbb'\n                  }}>一些描述语句</div>\n                        </Checkbox>\n                    </Checkbox.Group>\n                </div>;\n          }\n\n        };\n        return <Demo mdxType=\"Demo\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义label元素\"\n    }}>{`自定义label元素`}</h2>\n    <Playground __position={5} __code={'() => {\\n  const Demo = class Demo extends Component {\\n    constructor(...args) {\\n      super(...args)\\n      this.state = { checked: false }\\n      this.handleChange = this.handleChange.bind(this)\\n      this.toggle = this.toggle.bind(this)\\n    }\\n\\n    handleChange(checked) {\\n      this.setState({ checked })\\n    }\\n\\n    toggle() {\\n      this.setState(prev => ({ checked: !prev.checked }))\\n    }\\n\\n    render() {\\n      return (\\n        <Checkbox\\n          onChange={this.handleChange}\\n          labelClickable={false}\\n          checked={this.state.checked}\\n        >\\n          <span onClick={this.toggle} style={{ cursor: \\'default\\' }}>\\n            我已阅读\\n            <a\\n              href=\\\"https://www.qq.com\\\"\\n              target=\\\"_blank\\\"\\n              style={{ textDecoration: \\'none\\' }}\\n              onClick={e => e.stopPropagation()}\\n            >\\n              《用户协议》\\n            </a>\\n            并同意其中的条款\\n          </span>\\n        </Checkbox>\\n      )\\n    }\\n  }\\n\\n  return <Demo />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Checkbox,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n      {() => {\n        const Demo = class Demo extends Component {\n          constructor(...args) {\n            super(...args);\n            this.state = {\n              checked: false\n            };\n            this.handleChange = this.handleChange.bind(this);\n            this.toggle = this.toggle.bind(this);\n          }\n\n          handleChange(checked) {\n            this.setState({\n              checked\n            });\n          }\n\n          toggle() {\n            this.setState(prev => ({\n              checked: !prev.checked\n            }));\n          }\n\n          render() {\n            return <Checkbox onChange={this.handleChange} labelClickable={false} checked={this.state.checked} mdxType=\"Checkbox\">\n                    <span onClick={this.toggle} style={{\n                cursor: 'default'\n              }}>\n                        我已阅读\n                        <a href=\"https://www.qq.com\" target=\"_blank\" style={{\n                  textDecoration: 'none'\n                }} onClick={e => e.stopPropagation()}>\n                            《用户协议》\n                        </a>\n                        并同意其中的条款\n                    </span>\n                </Checkbox>;\n          }\n\n        };\n        return <Demo mdxType=\"Demo\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"参数\"\n    }}>{`参数`}</h2>\n    <Props mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}