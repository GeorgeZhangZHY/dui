{"version":3,"sources":["/Users/haoyuezhang/Documents/dev/dui/sites/dui/pages/Status.mdx","/Users/haoyuezhang/Documents/dev/dui/src/components/Status/README.md"],"names":["name","layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","Slider","Status","Playground","Props","Component","useState","useCallback","Demo","args","state","value","statusVisible","_hideTimer","handleSliderChange","bind","clearTimeout","setState","setTimeout","step","onChange","style","width","message","visible","size","isMDXComponent","parentName"],"mappings":"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","file":"static/js/sites-dui-pages-status.8e7d8400.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Slider, Status } from '../../../src'\nimport { Playground } from 'docz'\nimport Props from '../../../src/components/Status/README.md'\nimport { Component, useState, useCallback } from 'react'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Demo = makeShortcode(\"Demo\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"status-状态提示\"\n    }}>{`Status 状态提示`}</h1>\n    <h2 {...{\n      \"id\": \"固定位置\"\n    }}>{`固定位置`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const Demo = class Demo extends Component {\\n    constructor(...args) {\\n      super(...args)\\n      this.state = {\\n        value: 0,\\n        statusVisible: false,\\n      }\\n      this._hideTimer = -1\\n      this.handleSliderChange = this.handleSliderChange.bind(this)\\n    }\\n\\n    handleSliderChange(value) {\\n      clearTimeout(this._hideTimer)\\n      this.setState({ value, statusVisible: true }, () => {\\n        this._hideTimer = setTimeout(() => {\\n          this.setState({ statusVisible: false })\\n        }, 2000)\\n      })\\n    }\\n\\n    render() {\\n      const { value, statusVisible } = this.state\\n      return (\\n        <div>\\n          <Slider\\n            step={1}\\n            onChange={this.handleSliderChange}\\n            style={{ width: \\'300px\\' }}\\n          />\\n          <Status\\n            message={`当前值：${value}`}\\n            visible={statusVisible}\\n            size=\\\"small\\\"\\n          />\\n        </div>\\n      )\\n    }\\n  }\\n\\n  return <Demo />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Slider,\n      Status,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n      {() => {\n        const Demo = class Demo extends Component {\n          constructor(...args) {\n            super(...args);\n            this.state = {\n              value: 0,\n              statusVisible: false\n            };\n            this._hideTimer = -1;\n            this.handleSliderChange = this.handleSliderChange.bind(this);\n          }\n\n          handleSliderChange(value) {\n            clearTimeout(this._hideTimer);\n            this.setState({\n              value,\n              statusVisible: true\n            }, () => {\n              this._hideTimer = setTimeout(() => {\n                this.setState({\n                  statusVisible: false\n                });\n              }, 2000);\n            });\n          }\n\n          render() {\n            const {\n              value,\n              statusVisible\n            } = this.state;\n            return <div>\n                    <Slider step={1} onChange={this.handleSliderChange} style={{\n                width: '300px'\n              }} mdxType=\"Slider\" />\n                    <Status message={`当前值：${value}`} visible={statusVisible} size=\"small\" mdxType=\"Status\" />\n                </div>;\n          }\n\n        };\n        return <Demo mdxType=\"Demo\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"挂载到元素附近\"\n    }}>{`挂载到元素附近`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const Demo = class Demo extends Component {\\n    constructor(...args) {\\n      super(...args)\\n      this.state = {\\n        value: 0,\\n        statusVisible: false,\\n      }\\n      this._hideTimer = -1\\n      this.handleSliderChange = this.handleSliderChange.bind(this)\\n    }\\n\\n    handleSliderChange(value) {\\n      clearTimeout(this._hideTimer)\\n      this.setState({ value, statusVisible: true }, () => {\\n        this._hideTimer = setTimeout(() => {\\n          this.setState({ statusVisible: false })\\n        }, 2000)\\n      })\\n    }\\n\\n    render() {\\n      const { value, statusVisible } = this.state\\n      return (\\n        <div>\\n          <Status\\n            message={`当前值：${value}`}\\n            visible={statusVisible}\\n            size=\\\"small\\\"\\n          >\\n            <Slider\\n              step={1}\\n              onChange={this.handleSliderChange}\\n              style={{ width: \\'300px\\' }}\\n            />\\n          </Status>\\n        </div>\\n      )\\n    }\\n  }\\n\\n  return <Demo />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Slider,\n      Status,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback\n    }} mdxType=\"Playground\">\n      {() => {\n        const Demo = class Demo extends Component {\n          constructor(...args) {\n            super(...args);\n            this.state = {\n              value: 0,\n              statusVisible: false\n            };\n            this._hideTimer = -1;\n            this.handleSliderChange = this.handleSliderChange.bind(this);\n          }\n\n          handleSliderChange(value) {\n            clearTimeout(this._hideTimer);\n            this.setState({\n              value,\n              statusVisible: true\n            }, () => {\n              this._hideTimer = setTimeout(() => {\n                this.setState({\n                  statusVisible: false\n                });\n              }, 2000);\n            });\n          }\n\n          render() {\n            const {\n              value,\n              statusVisible\n            } = this.state;\n            return <div>\n                    <Status message={`当前值：${value}`} visible={statusVisible} size=\"small\" mdxType=\"Status\">\n                        <Slider step={1} onChange={this.handleSliderChange} style={{\n                  width: '300px'\n                }} mdxType=\"Slider\" />\n                    </Status>\n                </div>;\n          }\n\n        };\n        return <Demo mdxType=\"Demo\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"参数\"\n    }}>{`参数`}</h2>\n    <Props mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"status\"\n    }}>{`Status`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`zIndex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`组件显示在页面固定位置时的zIndex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`10000`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`显示的信息`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`visible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否显示`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`尺寸`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'small' `}{`|`}{` 'big'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'small'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`若有，则将显示在children附近；否则显示在页面固定位置`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}