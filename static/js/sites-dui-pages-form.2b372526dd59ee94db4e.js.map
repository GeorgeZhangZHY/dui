{"version":3,"sources":["/Users/haoyuezhang/Documents/dev/dui/sites/dui/assets/smile.svg","/Users/haoyuezhang/Documents/dev/dui/src/components/Form/README.md","/Users/haoyuezhang/Documents/dev/dui/sites/dui/pages/Form.mdx"],"names":["module","exports","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","name","__position","__code","__scope","this","Input","Button","Form","Playground","Props","Component","useState","useCallback","useEffect","testImageUrl","layout","Item","label","placeholder","onChange","value","console","log","icon","onClickIcon","e","labelStyle","width","Demo","create","onValuesChange","changedValues","allValues","form","getFieldDecorator","validateFields","rules","required","message","size","onClick","errors","values"],"mappings":"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","file":"static/js/sites-dui-pages-form.2836782f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/smile.bb16b1f0.svg\";","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`form`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`经 Form.create() 包装过的组件会自带 this.props.form 属性`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label 标签的样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`layout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`表单布局`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'horizontal'`}{`|`}{`'vertical'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`horizontal`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"formitem\"\n    }}>{`Form.Item`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类名`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否必填`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`status`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'default' `}{`|`}{` 'error'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'default'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`不同状态应展示的提示语，若为string/ReactElement类型则只对应error状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string `}{`|`}{` React.ReactElement `}{`|`}{` TItemMessageConfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label 标签的文本`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label 标签的样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`TItemMessageConfig类型如下`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`type TItemMessageConfig = {\n    default: string | React.ReactElement;\n    error: string | React.ReactElement;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"formcreateoption-createoption\"\n    }}>{`Form.create(option: CreateOption)`}</h3>\n    <p>{`使用方式如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`class CustomizedForm extends React.Component {}\n\nCustomizedForm = Form.create({})(CustomizedForm);\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`CreateOption`}</inlineCode>{` 参数配置如下`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onValuesChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`任一表单域的值发生改变时的回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(changedValues: Values, allValues: Values) => Array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"thispropsform\"\n    }}>{`this.props.form`}</h3>\n    <p>{`经过 Form.create 包装的组件将会自带 this.props.form 属性，this.props.form 提供的 API 如下：`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意：使用 getFieldsValue getFieldValue setFieldsValue 等时，应确保对应的 field 已经用 getFieldDecorator 注册过了。`}</p>\n    </blockquote>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getFieldDecorator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`用于和表单进行双向绑定，详见下方描述`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(id: string, option?: FieldDecoratorOption) => (E: React.ReactElement) => React.ReactElement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getFieldValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`获取一个输入控件的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(id: string) => any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getFieldsValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`获取一组输入控件的值，如不传入参数，则获取全部组件的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(ids?: Array) => any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setFieldsValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`设置一组输入控件的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(values: Values) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`resetFields`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`重置一组输入控件的值（为 initialValue）与状态，如不传入参数，则重置所有组件`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(ids?: Array) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validateFields`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验并获取所有输入域的值与 Error`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(cb: (errors, values) => void) => any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isFieldTouched`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`判断一个输入控件是否经历过值收集，主要用于错误验证`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(id: string) => boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getFieldError`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`获取某个输入控件的 Error`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(id: string) => FieldError`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`getFieldsError`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(ids?: Array) => FieldError`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`undefined`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"thispropsformgetfielddecoratorid-string-options-fielddecoratoroption\"\n    }}>{`this.props.form.getFieldDecorator(id: string, options: FieldDecoratorOption)`}</h3>\n    <p>{`经过 getFieldDecorator 包装的控件，表单控件会自动添加 value onChange，数据同步将被 Form 接管`}</p>\n    <blockquote>\n      <ol parentName=\"blockquote\">\n        <li parentName=\"ol\">{`你不再需要也不应该用 onChange 来做同步，但还是可以继续监听 onChange 等事件`}</li>\n        <li parentName=\"ol\">{`你不能用控件的 value defaultValue 等属性来设置表单域的值，默认值可以用 getFieldDecorator 里的 initialValue。`}</li>\n        <li parentName=\"ol\">{`你不应该用 setState，可以使用 this.props.form.setFieldsValue 来动态改变表单值。`}</li>\n      </ol>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"getfielddecoratorid-options-参数\"\n    }}>{`getFieldDecorator(id, options) 参数`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`id`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`输入控件唯一标志`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`必填`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options.initialValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`子节点的初始值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options.rules`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验规则，参考下方文档`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"optionsrules-校验规则\"\n    }}>{`options.rules 校验规则`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`参数`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`描述`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最小长度`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`max`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`最大长度`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否必选`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`校验文案`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义校验，返回 true 表示验证通过`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value) => boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Input, Button, Form } from '../../../src'\nimport { Playground } from 'docz'\nimport Props from '../../../src/components/Form/README.md'\nimport { Component, useState, useCallback, useEffect } from 'react'\nimport testImageUrl from '../assets/smile.svg';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Demo = makeShortcode(\"Demo\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"form-表单\"\n    }}>{`Form 表单`}</h1>\n    <h2 {...{\n      \"id\": \"基本\"\n    }}>{`基本`}</h2>\n    <Playground __position={0} __code={'<Form layout=\\\"vertical\\\">\\n  <Form.Item label=\\\"账号\\\">\\n    <Input placeholder=\\\"请输入\\\" onChange={value => console.log(value)} />\\n  </Form.Item>\\n  <Form.Item label=\\\"密码\\\">\\n    <Input\\n      placeholder=\\\"请输入\\\"\\n      onChange={value => console.log(value)}\\n      icon={testImageUrl}\\n      onClickIcon={e => console.log(e)}\\n    />\\n  </Form.Item>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Input,\n      Button,\n      Form,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback,\n      useEffect,\n      testImageUrl\n    }} mdxType=\"Playground\">\n    <Form layout=\"vertical\" mdxType=\"Form\">\n        <Form.Item label=\"账号\">\n            <Input placeholder=\"请输入\" onChange={value => console.log(value)} mdxType=\"Input\" />\n        </Form.Item>\n        <Form.Item label=\"密码\">\n            <Input placeholder=\"请输入\" onChange={value => console.log(value)} icon={testImageUrl} onClickIcon={e => console.log(e)} mdxType=\"Input\" />\n        </Form.Item>\n    </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"form-排列布局\"\n    }}>{`Form 排列布局`}</h2>\n    <Playground __position={1} __code={'<Form\\n  layout=\\\"vertical\\\"\\n  labelStyle={{\\n    width: 80,\\n  }}\\n>\\n  <Form.Item label=\\\"账号\\\">\\n    <Input placeholder=\\\"请输入\\\" onChange={value => console.log(value)} />\\n  </Form.Item>\\n  <Form.Item label=\\\"密码\\\">\\n    <Input\\n      placeholder=\\\"请输入\\\"\\n      onChange={value => console.log(value)}\\n      icon={testImageUrl}\\n      onClickIcon={e => console.log(e)}\\n    />\\n  </Form.Item>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Input,\n      Button,\n      Form,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback,\n      useEffect,\n      testImageUrl\n    }} mdxType=\"Playground\">\n    <Form layout=\"vertical\" labelStyle={{\n        width: 80\n      }} mdxType=\"Form\">\n        <Form.Item label=\"账号\">\n            <Input placeholder=\"请输入\" onChange={value => console.log(value)} mdxType=\"Input\" />\n        </Form.Item>\n        <Form.Item label=\"密码\">\n            <Input placeholder=\"请输入\" onChange={value => console.log(value)} icon={testImageUrl} onClickIcon={e => console.log(e)} mdxType=\"Input\" />\n        </Form.Item>\n    </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"formitem-排列布局\"\n    }}>{`Form.Item 排列布局`}</h2>\n    <Playground __position={2} __code={'<Form layout=\\\"vertical\\\">\\n  <Form.Item\\n    label=\\\"账号\\\"\\n    labelStyle={{\\n      width: 80,\\n    }}\\n  >\\n    <Input placeholder=\\\"请输入\\\" onChange={value => console.log(value)} />\\n  </Form.Item>\\n  <Form.Item\\n    label=\\\"密码\\\"\\n    labelStyle={{\\n      width: 80,\\n    }}\\n  >\\n    <Input\\n      placeholder=\\\"请输入\\\"\\n      onChange={value => console.log(value)}\\n      icon={testImageUrl}\\n      onClickIcon={e => console.log(e)}\\n    />\\n  </Form.Item>\\n</Form>'} __scope={{\n      props: this ? this.props : props,\n      Input,\n      Button,\n      Form,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback,\n      useEffect,\n      testImageUrl\n    }} mdxType=\"Playground\">\n    <Form layout=\"vertical\" mdxType=\"Form\">\n        <Form.Item label=\"账号\" labelStyle={{\n          width: 80\n        }}>\n            <Input placeholder=\"请输入\" onChange={value => console.log(value)} mdxType=\"Input\" />\n        </Form.Item>\n        <Form.Item label=\"密码\" labelStyle={{\n          width: 80\n        }}>\n            <Input placeholder=\"请输入\" onChange={value => console.log(value)} icon={testImageUrl} onClickIcon={e => console.log(e)} mdxType=\"Input\" />\n        </Form.Item>\n    </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"formcreate-用法\"\n    }}>{`Form.create 用法`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const Demo = Form.create({\\n    onValuesChange: (changedValues, allValues) => {\\n      console.log(\\'changedValues\\', changedValues)\\n      console.log(\\'allValues\\', allValues)\\n    },\\n  })(props => {\\n    const { getFieldDecorator, validateFields } = props.form\\n    const onSubmit = () => {\\n      validateFields((errors, values) => {\\n        console.log(\\'errors\\', errors)\\n        console.log(\\'values\\', values)\\n      })\\n    }\\n    return (\\n      <Form layout=\\\"vertical\\\">\\n        <Form.Item label=\\\"账号\\\">\\n          {getFieldDecorator(\\'account\\', {\\n            rules: [\\n              {\\n                required: true,\\n                message: \\'必须填写账号\\',\\n              },\\n            ],\\n          })(<Input placeholder=\\\"请输入\\\" />)}\\n        </Form.Item>\\n        <Form.Item label=\\\"密码\\\">\\n          {getFieldDecorator(\\'password\\', {\\n            rules: [\\n              {\\n                required: true,\\n                message: \\'必须输入账号\\',\\n              },\\n            ],\\n          })(<Input placeholder=\\\"请输入\\\" icon={testImageUrl} />)}\\n        </Form.Item>\\n        <Form.Item>\\n          <Button size=\\\"large\\\" onClick={onSubmit}>\\n            提交\\n          </Button>\\n        </Form.Item>\\n      </Form>\\n    )\\n  })\\n  return <Demo />\\n}'} __scope={{\n      props: this ? this.props : props,\n      Input,\n      Button,\n      Form,\n      Playground,\n      Props,\n      Component,\n      useState,\n      useCallback,\n      useEffect,\n      testImageUrl\n    }} mdxType=\"Playground\">\n    {() => {\n        const Demo = Form.create({\n          onValuesChange: (changedValues, allValues) => {\n            console.log('changedValues', changedValues);\n            console.log('allValues', allValues);\n          }\n        })(props => {\n          const {\n            getFieldDecorator,\n            validateFields\n          } = props.form;\n\n          const onSubmit = () => {\n            validateFields((errors, values) => {\n              console.log('errors', errors);\n              console.log('values', values);\n            });\n          };\n\n          return <Form layout=\"vertical\" mdxType=\"Form\">\n                <Form.Item label=\"账号\">\n                    {getFieldDecorator('account', {\n                rules: [{\n                  required: true,\n                  message: '必须填写账号'\n                }]\n              })(<Input placeholder=\"请输入\" mdxType=\"Input\" />)}\n                </Form.Item>\n                <Form.Item label=\"密码\">\n                    {getFieldDecorator('password', {\n                rules: [{\n                  required: true,\n                  message: '必须输入账号'\n                }]\n              })(<Input placeholder=\"请输入\" icon={testImageUrl} mdxType=\"Input\" />)}\n                </Form.Item>\n                <Form.Item>\n                    <Button size=\"large\" onClick={onSubmit} mdxType=\"Button\">提交</Button>\n                </Form.Item>\n            </Form>;\n        });\n        return <Demo mdxType=\"Demo\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"参数\"\n    }}>{`参数`}</h2>\n    <Props mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}