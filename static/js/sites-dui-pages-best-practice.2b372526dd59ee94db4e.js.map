{"version":3,"sources":["/Users/haoyuezhang/Documents/dev/dui/BESTPRACTICE.md","/Users/haoyuezhang/Documents/dev/dui/sites/dui/pages/BestPractice.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0YAYMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,4BADR,4BAGA,iBAAQ,CACN,GAAM,gBADR,gBAGA,gEAAiB,0BAAYC,WAAW,KAAvB,KAAjB,8GACA,iBAAQ,CACN,GAAM,4BADR,4BAGA,+EAAiB,0BAAYA,WAAW,KAAvB,cAAjB,UAA6E,0BAAYA,WAAW,KAAvB,WAA7E,uKAAsK,0BAAYA,WAAW,KAAvB,KAAtK,iBAA2N,0BAAYA,WAAW,KAAvB,uBAC3N,iBAAQ,CACN,GAAM,8CADR,8CAGA,iBAAQ,CACN,GAAM,uEADR,uEAGA,uRACA,iBAAQ,CACN,GAAM,+BADR,+BAGA,4hBACA,2CACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,wFAML,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,4F,qKAYTJ,EAAWK,gBAAiB,ECvD5B,IAKMN,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,YAAC,EAAD,CAAcA,QAAQ,kB,sLAK1BH,EAAWK,gBAAiB","file":"static/js/sites-dui-pages-best-practice.bdb11a25.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"全局样式\"\n    }}>{`全局样式`}</h2>\n    <h3 {...{\n      \"id\": \"字体\"\n    }}>{`字体`}</h3>\n    <p>{`可以直接通过CSS `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` 选择器覆盖dui的字体，一般不会引起问题`}</p>\n    <h3 {...{\n      \"id\": \"其他样式\"\n    }}>{`其他样式`}</h3>\n    <p>{`其他全局样式，例如 `}<inlineCode parentName=\"p\">{`box-sizing`}</inlineCode>{`、 `}<inlineCode parentName=\"p\">{`display`}</inlineCode>{` 等覆盖后可能会引起dui样式错乱，请将此类全局css规则的选择器 `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` 改成 `}<inlineCode parentName=\"p\">{`:not([class*=dui])`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"自定义组件样式\"\n    }}>{`自定义组件样式`}</h2>\n    <h3 {...{\n      \"id\": \"颜色、间距、大小、z-index等\"\n    }}>{`颜色、间距、大小、z-index等`}</h3>\n    <p>{`此类修改可以直接通过对应组件的style或者className参数直接修改，一般不会受到组件库版本更新的影响`}</p>\n    <h3 {...{\n      \"id\": \"display、position等\"\n    }}>{`display、position等`}</h3>\n    <p>{`此类属性会受组件渲染出的实际dom结构影响，若组件内部实现变化，可能会导致修改失效。因此，更好的办法是在想要控制的部分外面（组件的children或者组件外）增加一个div，修改这个div的上述属性。`}</p>\n    <p>{`示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`<div style={{ display: 'inline-block' }}>\n    <Menu.Item>...</Menu.Item>\n</div>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`<Button>\n    <div style={{ display: 'block' }}>\n        ...\n    </div>\n</Button>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport BESTPRACTICE from '../../../BESTPRACTICE.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <BESTPRACTICE mdxType=\"BESTPRACTICE\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}